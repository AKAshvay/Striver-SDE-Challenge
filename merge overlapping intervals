import java.util.* ;
import java.io.*; 
/*******************************************************

    Following is the Interval class structure

    class Interval {
        int start, int finish;

        Interval(int start, int finish) {
            this.start = start;
            this.finish = finish;
        }
    }
    
*******************************************************/

import java.util.List;


import java.util.ArrayList;
class Sorting implements Comparator<Interval>{
        public int compare(Interval p1, Interval p2){
            if(p2.start==p1.start){
                return p1.start-p2.start;
            }
            return p1.start-p2.start ;
        }
    }
public class Solution {
    
    public static List<Interval> mergeIntervals(Interval[] intervals) {
        // algorithm is there for solving this 
        ArrayList<Interval> list=new ArrayList<>();
        
        // step 1 sort the intervals array according to start of each intervals
        Arrays.sort(intervals,new Sorting());
        

        Interval curr=intervals[0];
        for(int i=1;i<intervals.length;i++)
        {
            if(curr.finish<intervals[i].start)
            {
                list.add(curr);
                curr=intervals[i];
            }
            else{
                curr.finish=Math.max(curr.finish,intervals[i].finish);
            }
        }
        list.add(curr);
        return list;
    }
}
